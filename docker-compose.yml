version: '3'


#Внешние волюмы
volumes:
    psql_cl_smpb_759ae582-d784-4a6d-b052-67a11ddbb317:
        external: true



# Общая сеть между разными микросервисами (композами)
networks:
  default:
   external:
    name: general_network_all_services


# Сервисы
services:


  # Постгрес (официальная сборка)
  cl_smpb_759ae582-d784-4a6d-b052-67a11ddbb317_postgres:
    restart: always
    image: postgres:13
    container_name: cl_smpb_759ae582-d784-4a6d-b052-67a11ddbb317_postgres
    command: postgres -c 'max_connections=5000'
    ports:
      - 5432:5432
    volumes:
      - psql_cl_smpb_759ae582-d784-4a6d-b052-67a11ddbb317:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: __test_app_core
      POSTGRES_USER: __test_app_core
      POSTGRES_DB: __test_app_core

    # внешняя сеть




  # Кликхаус (официальная сборка)
  cl_smpb_759ae582-d784-4a6d-b052-67a11ddbb317_clickhouse:
    image: yandex/clickhouse-server
    container_name: cl_smpb_759ae582-d784-4a6d-b052-67a11ddbb317_clickhouse
    ports:
      - 8123:8123
      - 9000:9000
    volumes:
      - ./__docker/volumes/clickhouse/cl_db:/var/lib/clickhouse


    # внешняя сеть


    restart: on-failure





  #  Контроллер кластера - зоопарк менеджер - зукипер
  zookeeper:
    image: zookeeper:3.4.9
    hostname: zookeeper
    container_name: zookeeper
    restart: on-failure

    ports:
      - 2181:2181

    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zookeeper:2888:3888

    volumes:
      - ./__docker/volumes/kafka/zoo/data:/data
      - ./__docker/volumes/kafka/zoo/log:/datalog


    # внешняя сеть



  # Первый брокер - полноценный контейнер кафки порт 9091

  kafka1:
    image: confluentinc/cp-kafka:5.3.0
    hostname: kafka1
    container_name: kafka1
    restart: on-failure

    ports:
      - 9091:9091

    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19091,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9091
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

    volumes:
      - ./__docker/volumes/kafka/k1:/var/lib/kafka/data


    # внешняя сеть


    depends_on:
      - zookeeper

  # Второй брокер - полноценный контейнер кафки порт 9092

  kafka2:

    image: confluentinc/cp-kafka:5.3.0
    hostname: kafka2
    container_name: kafka2
    restart: on-failure

    ports:
      - 9092:9092

    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka2:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 2
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

    volumes:
      - ./__docker/volumes/kafka/k2:/var/lib/kafka/data


    # внешняя сеть


    depends_on:
      - zookeeper


  # Третий брокер - полноценный контейнер кафки порт 9093

  kafka3:

    image: confluentinc/cp-kafka:5.3.0
    hostname: kafka3
    container_name: kafka3
    restart: on-failure

    ports:
      - 9093:9093

    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka3:19093,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 3
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

    volumes:
      - ./__docker/volumes/kafka/k3:/var/lib/kafka/data


    # внешняя сеть


    depends_on:
      - zookeeper

  # Админское GUI

  kafdrop:
    image: obsidiandynamics/kafdrop
    hostname: kafdrop
    container_name: kafdrop
    restart: on-failure
    ports:
      - 9001:9001

    environment:
      KAFKA_BROKERCONNECT: "kafka1:19091"
      SERVER_PORT: 9001


    # внешняя сеть


    depends_on:
      - kafka1
      - kafka2
      - kafka3


#  # Ядро
#  cl_smpb_759ae582-d784-4a6d-b052-67a11ddbb317:
#    build: ./
#    restart: on-failure
#    container_name: cl_smpb_759ae582-d784-4a6d-b052-67a11ddbb317
#
#
#    expose:
#      - 5111
#
#
#    volumes:
#
#     - ./__migrations:/cl_smpb/__migrations/
#
#     - ./scripts:/cl_smpb/scripts/
#
#     - ./__tests:/cl_smpb/__tests/
#
#     - ./APP_RUN:/cl_smpb/APP_RUN/
#
#     - ./back_core:/cl_smpb/back_core/
#
#     - ./client_core:/cl_smpb/client_core/
#
#     - ./data:/cl_smpb/data/
#
#     - ./APP_PYTHON:/cl_smpb/APP_PYTHON/
#
#
#    env_file:
#      - .env.development
#
#    environment:
#      ITS_DOCKER: "True"
#
#    depends_on:
#
#     - cl_smpb_759ae582-d784-4a6d-b052-67a11ddbb317_postgres
#
#
#     - cl_smpb_759ae582-d784-4a6d-b052-67a11ddbb317_clickhouse
#
#
#     - kafdrop
#
#
#
#    # внешняя сеть
#
#

#
#  # Nginx (официальная сборка)
#  cl_smpb_759ae582-d784-4a6d-b052-67a11ddbb317_nginx:
#    image: nginx
#    container_name: cl_smpb_759ae582-d784-4a6d-b052-67a11ddbb317_nginx
#    restart: unless-stopped
#    ports:
#      - 5111:5111
#
#    # внешняя сеть
#
#    volumes:
#      - ./__docker/volumes/nginx/nginx.conf:/etc/nginx/nginx.conf
#    depends_on:
#      - cl_smpb_759ae582-d784-4a6d-b052-67a11ddbb317

